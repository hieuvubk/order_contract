{
  "address": "0x1F46fe994Bb5F180F7C82a0eAdA6203369839b88",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "instance",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "DocumentStoreDeployed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "deploy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getDocumentStore",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xc2e1c738308400f15ad5db125b637f75297e5eef33f42dd93cd747addcd544d9",
  "receipt": {
    "to": null,
    "from": "0x05558851E6AaF020D3B13BDb2151077bb332eF83",
    "contractAddress": "0x1F46fe994Bb5F180F7C82a0eAdA6203369839b88",
    "transactionIndex": 6,
    "gasUsed": "978757",
    "logsBloom": "0x
    "blockHash": "0x4ca76ad0354f5e39115338a96d2045024a12f5100f39f26927deacedd608b110",
    "transactionHash": "0xc2e1c738308400f15ad5db125b637f75297e5eef33f42dd93cd747addcd544d9",
    "logs": [],
    "blockNumber": 15476450,
    "cumulativeGasUsed": "1974575",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "a844bc485dd015e367f2195bf461899b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"instance\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"DocumentStoreDeployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getDocumentStore\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DocumentFactory.sol\":\"DocumentStoreFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/DocumentFactory.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./DocumentStore.sol\\\";\\r\\n\\r\\n\\r\\ncontract DocumentStoreFactory {\\r\\n  event DocumentStoreDeployed(address indexed instance, address indexed creator);\\r\\n  mapping(address => address) private records;\\r\\n  address private _owner;\\r\\n\\r\\n  constructor() {\\r\\n    _owner = msg.sender;\\r\\n  }\\r\\n\\r\\n  function deploy(string memory name) public returns (address) {\\r\\n    // solhint-disable-next-line mark-callable-contracts\\r\\n    DocumentStore instance = new DocumentStore(name);\\r\\n    instance.transferOwnership(msg.sender);\\r\\n    records[msg.sender] = address(instance);\\r\\n    emit DocumentStoreDeployed(address(instance), msg.sender);\\r\\n    return address(instance);\\r\\n  }\\r\\n\\r\\n  function getDocumentStore(address owner) public view returns (address) {\\r\\n      return records[owner];\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0xf4e8f2a6c8d51c40096b7228222a7bff8ac7c8a0bd5c7796bdf11b9c2077828e\",\"license\":\"Apache-2.0\"},\"contracts/DocumentStore.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\n/*\\r\\n * Legacy version for reference and backward compatibility, similar to OwnableDocumentStore\\r\\n */\\r\\ncontract DocumentStore is Ownable {\\r\\n  string public name;\\r\\n  string public version = \\\"2.3.0\\\";\\r\\n\\r\\n  /// A mapping of the document hash to the block number that was issued\\r\\n  mapping(bytes32 => uint256) public documentIssued;\\r\\n  /// A mapping of the hash of the claim being revoked to the revocation block number\\r\\n  mapping(bytes32 => uint256) public documentRevoked;\\r\\n\\r\\n  event DocumentIssued(bytes32 indexed document, address indexed sender );\\r\\n  event DocumentRevoked(bytes32 indexed document, address indexed sender);\\r\\n\\r\\n  constructor(string memory _name) public {\\r\\n    name = _name;\\r\\n  }\\r\\n\\r\\n  function issue(bytes32 document) public onlyOwner onlyNotIssued(document) {\\r\\n    documentIssued[document] = block.number;\\r\\n    emit DocumentIssued(document, msg.sender);\\r\\n  }\\r\\n\\r\\n  function bulkIssue(bytes32[] memory documents) public {\\r\\n    for (uint256 i = 0; i < documents.length; i++) {\\r\\n      issue(documents[i]);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function getIssuedBlock(bytes32 document) public view onlyIssued(document) returns (uint256) {\\r\\n    return documentIssued[document];\\r\\n  }\\r\\n\\r\\n  function isIssued(bytes32 document) public view returns (bool) {\\r\\n    return (documentIssued[document] != 0);\\r\\n  }\\r\\n\\r\\n  function isIssuedBefore(bytes32 document, uint256 blockNumber) public view returns (bool) {\\r\\n    return documentIssued[document] != 0 && documentIssued[document] <= blockNumber;\\r\\n  }\\r\\n\\r\\n  function revoke(bytes32 document) public onlyOwner onlyNotRevoked(document) returns (bool) {\\r\\n    documentRevoked[document] = block.number;\\r\\n    emit DocumentRevoked(document, msg.sender);\\r\\n  }\\r\\n\\r\\n  function bulkRevoke(bytes32[] memory documents) public {\\r\\n    for (uint256 i = 0; i < documents.length; i++) {\\r\\n      revoke(documents[i]);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function isRevoked(bytes32 document) public view returns (bool) {\\r\\n    return documentRevoked[document] != 0;\\r\\n  }\\r\\n\\r\\n  function isRevokedBefore(bytes32 document, uint256 blockNumber) public view returns (bool) {\\r\\n    return documentRevoked[document] <= blockNumber && documentRevoked[document] != 0;\\r\\n  }\\r\\n\\r\\n  modifier onlyIssued(bytes32 document) {\\r\\n    require(isIssued(document), \\\"Error: Only issued document hashes can be revoked\\\");\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  modifier onlyNotIssued(bytes32 document) {\\r\\n    require(!isIssued(document), \\\"Error: Only hashes that have not been issued can be issued\\\");\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  modifier onlyNotRevoked(bytes32 claim) {\\r\\n    require(!isRevoked(claim), \\\"Error: Hash has been revoked previously\\\");\\r\\n    _;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x32ce11e95e8a27f4d5793b3b9791d9f9fd06bccce41125f05acc45ecbea13969\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600180546001600160a01b0319163317905561105f806100326000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063372256461461003b578063c760231614610064575b600080fd5b61004e610049366004610194565b610077565b60405161005b9190610263565b60405180910390f35b61004e6100723660046101c2565b610095565b6001600160a01b039081166000908152602081905260409020541690565b600080826040516100a590610187565b6100af9190610277565b604051809103906000f0801580156100cb573d6000803e3d6000fd5b5060405163f2fde38b60e01b81529091506001600160a01b0382169063f2fde38b906100fb903390600401610263565b600060405180830381600087803b15801561011557600080fd5b505af1158015610129573d6000803e3d6000fd5b50503360008181526020819052604080822080546001600160a01b0319166001600160a01b038816908117909155905192945092507ff23fd73c85bfbc0e685881403e392b44f15a72a5eba8537f26f04205cd3cf43691a392915050565b610d49806102e183390190565b6000602082840312156101a5578081fd5b81356001600160a01b03811681146101bb578182fd5b9392505050565b600060208083850312156101d4578182fd5b823567ffffffffffffffff808211156101eb578384fd5b818501915085601f8301126101fe578384fd5b813581811115610210576102106102ca565b604051601f8201601f1916810185018381118282101715610233576102336102ca565b6040528181528382018501881015610249578586fd5b818585018683013790810190930193909352509392505050565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b818110156102a357858101830151858201604001528201610287565b818111156102b45783604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fdfe60c060405260056080819052640322e332e360dc1b60a0908152620000289160029190620000de565b503480156200003657600080fd5b5060405162000d4938038062000d49833981016040819052620000599162000184565b6200006d620000676200008a565b6200008e565b805162000082906001906020840190620000de565b5050620002a6565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000ec9062000253565b90600052602060002090601f0160209004810192826200011057600085556200015b565b82601f106200012b57805160ff19168380011785556200015b565b828001600101855582156200015b579182015b828111156200015b5782518255916020019190600101906200013e565b50620001699291506200016d565b5090565b5b808211156200016957600081556001016200016e565b6000602080838503121562000197578182fd5b82516001600160401b0380821115620001ae578384fd5b818501915085601f830112620001c2578384fd5b815181811115620001d757620001d762000290565b604051601f8201601f1916810185018381118282101715620001fd57620001fd62000290565b604052818152838201850188101562000214578586fd5b8592505b8183101562000237578383018501518184018601529184019162000218565b818311156200024857858583830101525b979650505050505050565b6002810460018216806200026857607f821691505b602082108114156200028a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610a9380620002b66000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80635a9e03ca116100975780638da5cb5b116100665780638da5cb5b146101fa578063b75c7dc61461020f578063bf40b90414610222578063f2fde38b1461023557610100565b80635a9e03ca146101b9578063715018a6146101cc5780637df20826146101d45780638bc36c91146101e757610100565b8063339b6b39116100d3578063339b6b39146101785780634294857f1461018b5780634ada80761461019e57806354fd4d50146101b157610100565b806306fdde03146101055780630f75e81f14610123578063163aa6311461013857806333358d2d14610158575b600080fd5b61010d610248565b60405161011a919061081f565b60405180910390f35b6101366101313660046107c7565b6102d6565b005b61014b6101463660046107c7565b610384565b60405161011a9190610814565b61016b6101663660046107c7565b610398565b60405161011a91906109e2565b61014b6101863660046107df565b6103aa565b61014b6101993660046107c7565b6103dc565b6101366101ac36600461070d565b6103f0565b61010d610443565b61014b6101c73660046107df565b610450565b61013661047e565b6101366101e236600461070d565b6104c9565b61016b6101f53660046107c7565b610517565b610202610529565b60405161011a9190610800565b61014b61021d3660046107c7565b610538565b61016b6102303660046107c7565b6105e1565b6101366102433660046106e6565b610621565b60018054610255906109eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610281906109eb565b80156102ce5780601f106102a3576101008083540402835291602001916102ce565b820191906000526020600020905b8154815290600101906020018083116102b157829003601f168201915b505050505081565b6102de610692565b6001600160a01b03166102ef610529565b6001600160a01b03161461031e5760405162461bcd60e51b8152600401610315906109ad565b60405180910390fd5b8061032881610384565b156103455760405162461bcd60e51b815260040161031590610950565b60008281526003602052604080822043905551339184917f5fe7be8653a9f4a18be9633d6b1f314d87f8d455e0ba8f3502899990c39d9c209190a35050565b600090815260036020526040902054151590565b60036020526000908152604090205481565b60008281526004602052604081205482108015906103d5575060008381526004602052604090205415155b9392505050565b600090815260046020526040902054151590565b60005b815181101561043f5761042c82828151811061041f57634e487b7160e01b600052603260045260246000fd5b6020026020010151610538565b508061043781610a20565b9150506103f3565b5050565b60028054610255906109eb565b600082815260036020526040812054158015906103d557505060009182526003602052604090912054111590565b610486610692565b6001600160a01b0316610497610529565b6001600160a01b0316146104bd5760405162461bcd60e51b8152600401610315906109ad565b6104c76000610696565b565b60005b815181101561043f576105058282815181106104f857634e487b7160e01b600052603260045260246000fd5b60200260200101516102d6565b8061050f81610a20565b9150506104cc565b60046020526000908152604090205481565b6000546001600160a01b031690565b6000610542610692565b6001600160a01b0316610553610529565b6001600160a01b0316146105795760405162461bcd60e51b8152600401610315906109ad565b81610583816103dc565b156105a05760405162461bcd60e51b8152600401610315906108c3565b60008381526004602052604080822043905551339185917f0a7643bfbd115d98595cc7bd15944172c7ef0e4a7f48dcaf676dec4b74be93679190a350919050565b6000816105ed81610384565b6106095760405162461bcd60e51b815260040161031590610872565b60008381526003602052604090205491505b50919050565b610629610692565b6001600160a01b031661063a610529565b6001600160a01b0316146106605760405162461bcd60e51b8152600401610315906109ad565b6001600160a01b0381166106865760405162461bcd60e51b81526004016103159061090a565b61068f81610696565b50565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156106f7578081fd5b81356001600160a01b03811681146103d5578182fd5b6000602080838503121561071f578182fd5b823567ffffffffffffffff80821115610736578384fd5b818501915085601f830112610749578384fd5b81358181111561075b5761075b610a47565b8381026040518582820101818110858211171561077a5761077a610a47565b604052828152858101935084860182860187018a1015610798578788fd5b8795505b838610156107ba57803585526001959095019493860193860161079c565b5098975050505050505050565b6000602082840312156107d8578081fd5b5035919050565b600080604083850312156107f1578081fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b8181101561084b5785810183015185820160400152820161082f565b8181111561085c5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526031908201527f4572726f723a204f6e6c792069737375656420646f63756d656e742068617368604082015270195cc818d85b881899481c995d9bdad959607a1b606082015260800190565b60208082526027908201527f4572726f723a204861736820686173206265656e207265766f6b65642070726560408201526676696f75736c7960c81b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252603a908201527f4572726f723a204f6e6c792068617368657320746861742068617665206e6f7460408201527f206265656e206973737565642063616e20626520697373756564000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b6002810460018216806109ff57607f821691505b6020821081141561061b57634e487b7160e01b600052602260045260246000fd5b6000600019821415610a4057634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d5dfcfe7c687be710efb1c4b87c5c0520b62a859eebd01ec0d3232ebf2cdf9f064736f6c63430008000033a264697066735822122063f22753574cfc95424b5683219f15fe6bcaf8840a0443da27eb6e399b3b66df64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063372256461461003b578063c760231614610064575b600080fd5b61004e610049366004610194565b610077565b60405161005b9190610263565b60405180910390f35b61004e6100723660046101c2565b610095565b6001600160a01b039081166000908152602081905260409020541690565b600080826040516100a590610187565b6100af9190610277565b604051809103906000f0801580156100cb573d6000803e3d6000fd5b5060405163f2fde38b60e01b81529091506001600160a01b0382169063f2fde38b906100fb903390600401610263565b600060405180830381600087803b15801561011557600080fd5b505af1158015610129573d6000803e3d6000fd5b50503360008181526020819052604080822080546001600160a01b0319166001600160a01b038816908117909155905192945092507ff23fd73c85bfbc0e685881403e392b44f15a72a5eba8537f26f04205cd3cf43691a392915050565b610d49806102e183390190565b6000602082840312156101a5578081fd5b81356001600160a01b03811681146101bb578182fd5b9392505050565b600060208083850312156101d4578182fd5b823567ffffffffffffffff808211156101eb578384fd5b818501915085601f8301126101fe578384fd5b813581811115610210576102106102ca565b604051601f8201601f1916810185018381118282101715610233576102336102ca565b6040528181528382018501881015610249578586fd5b818585018683013790810190930193909352509392505050565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b818110156102a357858101830151858201604001528201610287565b818111156102b45783604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fdfe60c060405260056080819052640322e332e360dc1b60a0908152620000289160029190620000de565b503480156200003657600080fd5b5060405162000d4938038062000d49833981016040819052620000599162000184565b6200006d620000676200008a565b6200008e565b805162000082906001906020840190620000de565b5050620002a6565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000ec9062000253565b90600052602060002090601f0160209004810192826200011057600085556200015b565b82601f106200012b57805160ff19168380011785556200015b565b828001600101855582156200015b579182015b828111156200015b5782518255916020019190600101906200013e565b50620001699291506200016d565b5090565b5b808211156200016957600081556001016200016e565b6000602080838503121562000197578182fd5b82516001600160401b0380821115620001ae578384fd5b818501915085601f830112620001c2578384fd5b815181811115620001d757620001d762000290565b604051601f8201601f1916810185018381118282101715620001fd57620001fd62000290565b604052818152838201850188101562000214578586fd5b8592505b8183101562000237578383018501518184018601529184019162000218565b818311156200024857858583830101525b979650505050505050565b6002810460018216806200026857607f821691505b602082108114156200028a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610a9380620002b66000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80635a9e03ca116100975780638da5cb5b116100665780638da5cb5b146101fa578063b75c7dc61461020f578063bf40b90414610222578063f2fde38b1461023557610100565b80635a9e03ca146101b9578063715018a6146101cc5780637df20826146101d45780638bc36c91146101e757610100565b8063339b6b39116100d3578063339b6b39146101785780634294857f1461018b5780634ada80761461019e57806354fd4d50146101b157610100565b806306fdde03146101055780630f75e81f14610123578063163aa6311461013857806333358d2d14610158575b600080fd5b61010d610248565b60405161011a919061081f565b60405180910390f35b6101366101313660046107c7565b6102d6565b005b61014b6101463660046107c7565b610384565b60405161011a9190610814565b61016b6101663660046107c7565b610398565b60405161011a91906109e2565b61014b6101863660046107df565b6103aa565b61014b6101993660046107c7565b6103dc565b6101366101ac36600461070d565b6103f0565b61010d610443565b61014b6101c73660046107df565b610450565b61013661047e565b6101366101e236600461070d565b6104c9565b61016b6101f53660046107c7565b610517565b610202610529565b60405161011a9190610800565b61014b61021d3660046107c7565b610538565b61016b6102303660046107c7565b6105e1565b6101366102433660046106e6565b610621565b60018054610255906109eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610281906109eb565b80156102ce5780601f106102a3576101008083540402835291602001916102ce565b820191906000526020600020905b8154815290600101906020018083116102b157829003601f168201915b505050505081565b6102de610692565b6001600160a01b03166102ef610529565b6001600160a01b03161461031e5760405162461bcd60e51b8152600401610315906109ad565b60405180910390fd5b8061032881610384565b156103455760405162461bcd60e51b815260040161031590610950565b60008281526003602052604080822043905551339184917f5fe7be8653a9f4a18be9633d6b1f314d87f8d455e0ba8f3502899990c39d9c209190a35050565b600090815260036020526040902054151590565b60036020526000908152604090205481565b60008281526004602052604081205482108015906103d5575060008381526004602052604090205415155b9392505050565b600090815260046020526040902054151590565b60005b815181101561043f5761042c82828151811061041f57634e487b7160e01b600052603260045260246000fd5b6020026020010151610538565b508061043781610a20565b9150506103f3565b5050565b60028054610255906109eb565b600082815260036020526040812054158015906103d557505060009182526003602052604090912054111590565b610486610692565b6001600160a01b0316610497610529565b6001600160a01b0316146104bd5760405162461bcd60e51b8152600401610315906109ad565b6104c76000610696565b565b60005b815181101561043f576105058282815181106104f857634e487b7160e01b600052603260045260246000fd5b60200260200101516102d6565b8061050f81610a20565b9150506104cc565b60046020526000908152604090205481565b6000546001600160a01b031690565b6000610542610692565b6001600160a01b0316610553610529565b6001600160a01b0316146105795760405162461bcd60e51b8152600401610315906109ad565b81610583816103dc565b156105a05760405162461bcd60e51b8152600401610315906108c3565b60008381526004602052604080822043905551339185917f0a7643bfbd115d98595cc7bd15944172c7ef0e4a7f48dcaf676dec4b74be93679190a350919050565b6000816105ed81610384565b6106095760405162461bcd60e51b815260040161031590610872565b60008381526003602052604090205491505b50919050565b610629610692565b6001600160a01b031661063a610529565b6001600160a01b0316146106605760405162461bcd60e51b8152600401610315906109ad565b6001600160a01b0381166106865760405162461bcd60e51b81526004016103159061090a565b61068f81610696565b50565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156106f7578081fd5b81356001600160a01b03811681146103d5578182fd5b6000602080838503121561071f578182fd5b823567ffffffffffffffff80821115610736578384fd5b818501915085601f830112610749578384fd5b81358181111561075b5761075b610a47565b8381026040518582820101818110858211171561077a5761077a610a47565b604052828152858101935084860182860187018a1015610798578788fd5b8795505b838610156107ba57803585526001959095019493860193860161079c565b5098975050505050505050565b6000602082840312156107d8578081fd5b5035919050565b600080604083850312156107f1578081fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b8181101561084b5785810183015185820160400152820161082f565b8181111561085c5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526031908201527f4572726f723a204f6e6c792069737375656420646f63756d656e742068617368604082015270195cc818d85b881899481c995d9bdad959607a1b606082015260800190565b60208082526027908201527f4572726f723a204861736820686173206265656e207265766f6b65642070726560408201526676696f75736c7960c81b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252603a908201527f4572726f723a204f6e6c792068617368657320746861742068617665206e6f7460408201527f206265656e206973737565642063616e20626520697373756564000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b6002810460018216806109ff57607f821691505b6020821081141561061b57634e487b7160e01b600052602260045260246000fd5b6000600019821415610a4057634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d5dfcfe7c687be710efb1c4b87c5c0520b62a859eebd01ec0d3232ebf2cdf9f064736f6c63430008000033a264697066735822122063f22753574cfc95424b5683219f15fe6bcaf8840a0443da27eb6e399b3b66df64736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 621,
        "contract": "contracts/DocumentFactory.sol:DocumentStoreFactory",
        "label": "records",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 623,
        "contract": "contracts/DocumentFactory.sol:DocumentStoreFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      }
    }
  }
}