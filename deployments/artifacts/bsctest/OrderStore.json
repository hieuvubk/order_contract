{
  "address": "0x0273b17Eb666221489C75456f4b9eb564664031f",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "orderId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "OrderUpload",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "signers",
          "type": "address"
        }
      ],
      "name": "Sign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "orderId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "enum OrderStore.OrderStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "UpdateStatus",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        }
      ],
      "name": "Verify",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "NCC_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NVDP_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NVGH_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NVKD_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "QL_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SHOP_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        }
      ],
      "name": "addTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        }
      ],
      "name": "confirmTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "consensusTx",
      "outputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "orderId",
          "type": "string"
        }
      ],
      "name": "getOrder",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "enum OrderStore.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "atBlock",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderStore.StatusHistory[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "orderId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "issue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "orders",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requires",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "roles",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rules",
      "outputs": [
        {
          "internalType": "enum OrderStore.OrderStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "setRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "setSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "signatures",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "signers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "statusHistory",
      "outputs": [
        {
          "internalType": "enum OrderStore.OrderStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "atBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        }
      ],
      "name": "submitTransaction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "orderId",
          "type": "string"
        },
        {
          "internalType": "enum OrderStore.OrderStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "updateOrderStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x69cf54dea825826656da2c55dbf05c1b3492b913fb052297e1379735857e1db3",
  "receipt": {
    "to": null,
    "from": "0x16018214aa8B98692bF961aD20B7d11345Ba7AC5",
    "contractAddress": "0x0273b17Eb666221489C75456f4b9eb564664031f",
    "transactionIndex": 1,
    "gasUsed": "1486830",
    "logsBloom": "0x
    "blockHash": "0x6c1e45ca149267996aacfb0c495223f90fd6aa538e701a517538e36dbe65d1b0",
    "transactionHash": "0x69cf54dea825826656da2c55dbf05c1b3492b913fb052297e1379735857e1db3",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 18076360,
        "transactionHash": "0x69cf54dea825826656da2c55dbf05c1b3492b913fb052297e1379735857e1db3",
        "address": "0x0273b17Eb666221489C75456f4b9eb564664031f",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000016018214aa8b98692bf961ad20b7d11345ba7ac5"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x6c1e45ca149267996aacfb0c495223f90fd6aa538e701a517538e36dbe65d1b0"
      }
    ],
    "blockNumber": 18076360,
    "cumulativeGasUsed": "1507830",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "a7fb60c47a528fb4127ca3eb87f3624d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"orderId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"OrderUpload\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"signers\",\"type\":\"address\"}],\"name\":\"Sign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"orderId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"enum OrderStore.OrderStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"UpdateStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"Verify\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NCC_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NVDP_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NVGH_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NVKD_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QL_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHOP_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"addTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"confirmTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"consensusTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"orderId\",\"type\":\"string\"}],\"name\":\"getOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"enum OrderStore.OrderStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"atBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderStore.StatusHistory[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"orderId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"issue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requires\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rules\",\"outputs\":[{\"internalType\":\"enum OrderStore.OrderStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"setRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"setSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signatures\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"signers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"statusHistory\",\"outputs\":[{\"internalType\":\"enum OrderStore.OrderStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"atBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"submitTransaction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"orderId\",\"type\":\"string\"},{\"internalType\":\"enum OrderStore.OrderStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"updateOrderStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"consensusTx(string,bytes32)\":{\"notice\":\"A mapping of consensus hash to signed\"},\"orders(string)\":{\"notice\":\"A mapping of the order id to the hash that was issued\"},\"roles(address)\":{\"notice\":\"A mapping of the address to role\"},\"rules(bytes32,uint256)\":{\"notice\":\"A mapping of role to status can accept\"},\"signatures(bytes32,address)\":{\"notice\":\"A mapping of consensus hash to signed\"},\"statusHistory(string,uint256)\":{\"notice\":\"A mapping of the order id to order status throught time\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OrderStore.sol\":\"OrderStore\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/OrderStore.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\n/*\\r\\n * Legacy version for reference and backward compatibility, similar to OwnableDocumentStore\\r\\n */\\r\\ncontract OrderStore is Ownable {\\r\\n\\r\\n  bytes32 public constant NVKD_ROLE = keccak256(\\\"NVKD_ROLE\\\"); // Nhan vien kinh doanh\\r\\n  bytes32 public constant NVDP_ROLE = keccak256(\\\"NVDP_ROLE\\\"); // Nhan vien dieu phoi\\r\\n  bytes32 public constant NVGH_ROLE = keccak256(\\\"NVGH_ROLE\\\"); // Nhan vien giao hang\\r\\n  bytes32 public constant QL_ROLE = keccak256(\\\"QL_ROLE\\\"); // Quan ly\\r\\n  bytes32 public constant SHOP_ROLE = keccak256(\\\"SHOP_ROLE\\\"); // Shop\\r\\n  bytes32 public constant NCC_ROLE = keccak256(\\\"NCC_ROLE\\\"); // Nha cung cap\\r\\n\\r\\n  string name;\\r\\n  // accepted = X\\u00e1c nh\\u1eadn\\r\\n  // call_ship = Giao ship l\\u1ea5y h\\u00e0ng\\r\\n  // taked = Ship \\u0111\\u00e3 l\\u1ea5y h\\u00e0ng\\r\\n  // warehouse = Giao kho\\r\\n  // delivering = \\u0110ang giao h\\u00e0ng\\r\\n  // delivery_success = Giao h\\u00e0ng th\\u00e0nh c\\u00f4ng\\r\\n  // rejected = Tr\\u1ea3 l\\u1ea1i h\\u00e0ng\\r\\n  // return_warehouse = Nh\\u1eadp l\\u1ea1i kho\\r\\n  // return_shop = Tr\\u1ea3 shop th\\u00e0nh c\\u00f4ng\\r\\n  // cancel = H\\u1ee7y v\\u1eadn \\u0111\\u01a1n\\r\\n  // checking = \\u0110ang \\u0111\\u1ed1i so\\u00e1t\\r\\n  // checked = \\u0110\\u00e3 \\u0111\\u1ed1i so\\u00e1t\\r\\n  // wait_deposit = Ch\\u1edd c\\u1ecdc\\r\\n  // deposited = \\u0110\\u00e3 \\u0111\\u1eb7t c\\u1ecdc\\r\\n  enum OrderStatus {\\r\\n    accepted, \\r\\n    call_ship,\\r\\n    taked,\\r\\n    warehouse,\\r\\n    delivering,\\r\\n    delivery_success,\\r\\n    rejected,\\r\\n    return_warehouse,\\r\\n    return_shop,\\r\\n    cancel,\\r\\n    checking,\\r\\n    checked,\\r\\n    wait_deposit, \\r\\n    deposited \\r\\n  }\\r\\n\\r\\n  struct StatusHistory {\\r\\n    OrderStatus status;\\r\\n    uint256 atBlock;\\r\\n  }\\r\\n\\r\\n  struct Consensus {\\r\\n    bool verified;\\r\\n    uint256 timestamp;\\r\\n  }\\r\\n\\r\\n  /// A mapping of the order id to the hash that was issued\\r\\n  mapping(string => bytes32) public orders;\\r\\n\\r\\n  /// A mapping of the order id to order status throught time\\r\\n  mapping(string => StatusHistory[]) public statusHistory;\\r\\n\\r\\n  /// A mapping of the address to role\\r\\n  mapping(address => bytes32) public roles;\\r\\n\\r\\n  /// A mapping of role to status can accept\\r\\n  mapping(bytes32 => OrderStatus[]) public rules;\\r\\n\\r\\n  /// A mapping of consensus hash to signed\\r\\n  mapping(bytes32 => mapping(address => bool)) public signatures;\\r\\n\\r\\n  /// A mapping of consensus hash to signed\\r\\n  mapping(string => mapping(bytes32 => Consensus)) public consensusTx;\\r\\n\\r\\n  address[] public signers;\\r\\n\\r\\n  uint256 public constant requires = 2; // Nha cung cap\\r\\n\\r\\n  event OrderUpload(string orderId, bytes32 orderHash, address sender );\\r\\n  event UpdateStatus(string orderId, OrderStatus status, address sender);\\r\\n  event Sign(bytes32 data, address signers);\\r\\n  event Verify(bytes32 data);\\r\\n\\r\\n  constructor() public {\\r\\n    roles[msg.sender] = NVKD_ROLE;\\r\\n    signers.push(msg.sender);\\r\\n    initRules();\\r\\n  }\\r\\n\\r\\n  function initRules() internal {\\r\\n    rules[NVKD_ROLE].push(OrderStatus.accepted);\\r\\n    rules[NVKD_ROLE].push(OrderStatus.cancel);\\r\\n    rules[NVKD_ROLE].push(OrderStatus.return_shop);\\r\\n    rules[NVKD_ROLE].push(OrderStatus.checked);\\r\\n    rules[NVKD_ROLE].push(OrderStatus.checking);\\r\\n    rules[NVDP_ROLE].push(OrderStatus.call_ship);\\r\\n    rules[NVGH_ROLE].push(OrderStatus.taked);\\r\\n    rules[NVGH_ROLE].push(OrderStatus.warehouse);\\r\\n    rules[NVGH_ROLE].push(OrderStatus.delivering);\\r\\n    rules[NVGH_ROLE].push(OrderStatus.rejected);\\r\\n    rules[NVGH_ROLE].push(OrderStatus.return_warehouse);\\r\\n    rules[NVGH_ROLE].push(OrderStatus.deposited);\\r\\n  }\\r\\n\\r\\n  function issue(string memory orderId, bytes32 orderHash) public onlyOwner {\\r\\n    require(statusHistory[orderId].length == 0, \\\"Order exist\\\");\\r\\n\\r\\n    statusHistory[orderId].push(StatusHistory({\\r\\n      status: OrderStatus.accepted,\\r\\n      atBlock: block.number\\r\\n    }));\\r\\n    orders[orderId] = orderHash;\\r\\n    emit OrderUpload(orderId, orderHash, msg.sender);\\r\\n  }\\r\\n\\r\\n  function updateOrderStatus(string memory orderId, OrderStatus status) public onlyOwner {\\r\\n    require(statusHistory[orderId].length != 0, \\\"Order not exist\\\");\\r\\n    bytes32 role = roles[msg.sender];\\r\\n    OrderStatus[] memory remainStatus = rules[role];\\r\\n    bool isExist = false;\\r\\n    for(uint256 i=0; i < remainStatus.length; i++) {\\r\\n      if(status == remainStatus[i]) {\\r\\n        isExist = true;\\r\\n        break;\\r\\n      }\\r\\n    }\\r\\n    require(isExist, \\\"No permission\\\");\\r\\n    statusHistory[orderId].push(StatusHistory({\\r\\n          status: status,\\r\\n          atBlock: block.number\\r\\n    }));\\r\\n    emit UpdateStatus(orderId, status, msg.sender);\\r\\n  }\\r\\n\\r\\n  function getOrder(string memory orderId) public view returns (bytes32, StatusHistory[] memory) {\\r\\n    return (orders[orderId], statusHistory[orderId]);\\r\\n  }\\r\\n\\r\\n  function submitTransaction(string calldata id, bytes32 data)\\r\\n        public\\r\\n        returns (uint transactionId)\\r\\n  {\\r\\n    require(roles[msg.sender] == QL_ROLE || roles[msg.sender] == SHOP_ROLE || roles[msg.sender] == NCC_ROLE, \\\"Not permission\\\");\\r\\n    addTransaction(id, data);\\r\\n    signatures[data][msg.sender] = true;\\r\\n    emit Sign(data, msg.sender);\\r\\n    confirmTransaction(id,data);\\r\\n  }\\r\\n\\r\\n  function addTransaction(string calldata id, bytes32 data)\\r\\n        public\\r\\n    {\\r\\n        if(consensusTx[id][data].timestamp != 0) {\\r\\n          return;\\r\\n        } else {\\r\\n          consensusTx[id][data] = Consensus({\\r\\n            verified: false,\\r\\n            timestamp: block.timestamp\\r\\n          });\\r\\n        }\\r\\n    }\\r\\n\\r\\n  function confirmTransaction(string calldata id, bytes32 data)\\r\\n        public\\r\\n    {\\r\\n        uint256 count = 0;\\r\\n        for(uint256 i = 0 ; i < signers.length; i++) {\\r\\n          if(signatures[data][signers[i]] == true) {\\r\\n            count++;\\r\\n          }\\r\\n        }\\r\\n        if(count == requires) {\\r\\n          consensusTx[id][data].verified = true;\\r\\n          emit Verify(data);\\r\\n        }\\r\\n    }\\r\\n  \\r\\n  function setSigner(address signer) onlyOwner public {\\r\\n    signers.push(signer);\\r\\n  }\\r\\n\\r\\n  function setRole(address user, bytes32 role) public {\\r\\n    roles[user] = role;\\r\\n  }\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0xd1603bf10450c909905354fbc51fd020bd43bdba588a4998e67eed8a25754114\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002161001c61009f565b6100a3565b3360008181526004602052604081207f722f6341587eccff4e236840b2c6571211fb687822bad2b7c7b37b130d4c617990556008805460018101825591527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b031916909117905561009a6100f3565b61037c565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600560209081527febfa74d0d8525dac185537e0a178d2781e5b93766bca94c82da3b10443a1c3a68054600180820183557f999edeba1e6b0ba4cedbd423663cb7b4274061a032dc47e0f1cbe9b5c8f1514084830481018054601f94851661010090810a60ff908102199092169092558554808501875587810484018054918716840a60098102908402199092169190911790558554808501875587810484018054918716840a60088102908402199092169190911790558554808501875587810484018054918716840a600b81029084021990921691909117905585548085019096558686049092018054958516820a600a810290840219909616959095179094557f072b5618ca3fa2b7a26724d02b3b37fdbdd100f60cfaacd786ca0756445017e780548084019091557fca736f7ef4b0d56a0f16716dea1f3886a44d3baeb9fa621dc64fc41a866c249d868204018054918516860a8084021990921690911790557f2fe62e94ce8a924925dd98fe6970dd77db1d5936fe21c62074a276e434cb805d8054808401825560008290527f51f6466cc4ec25cfa2a835ede5d507298d34e28a301f9e76a3b84185797dd62d87820481018054928716880a6002810290860219909316929092179091558154808501835587810482018054918716880a60038102908602199092169190911790558154808501835587810482018054918716880a60048102908602199092169190911790558154808501835587810482018054918716880a60068102908602199092169190911790558154808501835587810482018054918716880a6007810290860219909216919091179055815493840190915594820490940180549190921690920a600d8102930219909116919091179055565b6115578061038b6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80636c19e783116100de5780638da5cb5b11610097578063d5af096d11610071578063d5af096d14610316578063d5b988201461031e578063dc18fa9514610326578063f2fde38b1461034657610173565b80638da5cb5b146102da57806399374642146102e2578063bb9a932c146102f557610173565b80636c19e783146102865780637068fab914610299578063712ca0f8146102a1578063715018a6146102c257806371d05b7e146102ca57806389b2465d146102d257610173565b80633a5f4e86116101305780633a5f4e86146102125780633fc770a514610225578063466cf7a81461022d5780634749a63f14610240578063673132e214610260578063674f29481461027357610173565b806301d0216c1461017857806306577f2614610196578063123e7582146101ab5780631a948947146101be5780632079fb9a146101d1578063364476ed146101f1575b600080fd5b610180610359565b60405161018d9190611285565b60405180910390f35b6101a96101a436600461100b565b61037d565b005b6101a96101b9366004611080565b610399565b6101806101cc3660046110f3565b61042f565b6101e46101df3660046111c4565b61044c565b60405161018d9190611256565b6102046101ff36600461112e565b610476565b60405161018d929190611317565b6101a961022036600461112e565b6104c5565b610180610631565b61018061023b366004611080565b610655565b61025361024e36600461105f565b610790565b60405161018d9190611303565b6101a961026e366004611080565b6107d3565b6101a9610281366004611171565b6108ea565b6101a9610294366004610ff1565b610bae565b610180610c3f565b6102b46102af3660046110f3565b610c44565b60405161018d9291906112a5565b6101a9610d39565b610180610d84565b610180610da8565b6101e4610dcc565b6101806102f0366004610ff1565b610ddb565b61030861030336600461112e565b610ded565b60405161018d929190611275565b610180610e27565b610180610e4b565b610339610334366004611034565b610e6f565b60405161018d919061126a565b6101a9610354366004610ff1565b610e8f565b7f1f0426c2589e5c3ea5f5996e2a4371ca21edd86514b6679c9dd135d7c85b28bf81565b6001600160a01b03909116600090815260046020526040902055565b600783836040516103ab92919061122a565b908152604080516020928190038301902060008481529252902060010154156103d35761042a565b6040805180820182526000815242602082015290516007906103f8908690869061122a565b90815260408051602092819003830190206000858152908352208251815460ff19169015151781559101516001909101555b505050565b805160208183018101805160028252928201919093012091525481565b6008818154811061045c57600080fd5b6000918252602090912001546001600160a01b0316905081565b815160208184018101805160038252928201918501919091209190528054829081106104a157600080fd5b60009182526020909120600290910201805460019091015460ff9091169250905082565b6104cd610f00565b6001600160a01b03166104de610dcc565b6001600160a01b03161461050d5760405162461bcd60e51b815260040161050490611432565b60405180910390fd5b60038260405161051d919061123a565b908152604051908190036020019020541561054a5760405162461bcd60e51b8152600401610504906113e6565b60038260405161055a919061123a565b90815260408051918290036020908101832083830190925260008084524382850152825460018082018555938252919020835160029092020180549092839160ff19169083600d8111156105be57634e487b7160e01b600052602160045260246000fd5b0217905550602082015181600101555050806002836040516105e0919061123a565b9081526020016040518091039020819055507f069662d34c4fca879fc5556a8d35367de009ac745d8dae427eed8b8164e3095c82823360405161062593929190611332565b60405180910390a15050565b7f80d27d05994edf4994028aeca85fdaca3f2d00ef05d9d609a8b295c631139a6581565b336000908152600460205260408120547f80d27d05994edf4994028aeca85fdaca3f2d00ef05d9d609a8b295c631139a6514806106c05750336000908152600460205260409020547f1f0426c2589e5c3ea5f5996e2a4371ca21edd86514b6679c9dd135d7c85b28bf145b806106f95750336000908152600460205260409020547f790b481f3d8436972ed2b30ac1cacd05cadaf09877d2b8f61833ec142e78e18e145b6107155760405162461bcd60e51b815260040161050490611467565b610720848484610399565b600082815260066020908152604080832033808552925291829020805460ff1916600117905590517f84de0f7afdcdfbe1671ed8e89eaa3b583c267b4d31e1d5da26b189ee1f51bf2d916107769185919061128e565b60405180910390a16107898484846107d3565b9392505050565b600560205281600052604060002081815481106107ac57600080fd5b9060005260206000209060209182820401919006915091509054906101000a900460ff1681565b6000805b600854811015610866576000838152600660205260408120600880549192918490811061081457634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff161515600114156108545781610850816114e4565b9250505b8061085e816114e4565b9150506107d7565b5060028114156108e45760016007858560405161088492919061122a565b9081526040805160209281900383018120600087815293529120805460ff1916921515929092179091557f2fdd6e6f80d806dd935b23adae88aacd7e931530d582f5666d6ef4ced9129bfb906108db908490611285565b60405180910390a15b50505050565b6108f2610f00565b6001600160a01b0316610903610dcc565b6001600160a01b0316146109295760405162461bcd60e51b815260040161050490611432565b600382604051610939919061123a565b908152604051908190036020019020546109655760405162461bcd60e51b81526004016105049061148f565b33600090815260046020908152604080832054808452600583528184208054835181860281018601909452808452919493909190830182828015610a0657602002820191906000526020600020906000905b82829054906101000a900460ff16600d8111156109e457634e487b7160e01b600052602160045260246000fd5b8152602060019283018181049485019490930390920291018084116109b75790505b505050505090506000805b8251811015610aa257828181518110610a3a57634e487b7160e01b600052603260045260246000fd5b6020026020010151600d811115610a6157634e487b7160e01b600052602160045260246000fd5b85600d811115610a8157634e487b7160e01b600052602160045260246000fd5b1415610a905760019150610aa2565b80610a9a816114e4565b915050610a11565b5080610ac05760405162461bcd60e51b81526004016105049061140b565b600385604051610ad0919061123a565b9081526020016040518091039020604051806040016040528086600d811115610b0957634e487b7160e01b600052602160045260246000fd5b81524360209182015282546001818101855560009485529190932082516002909402018054929390929091839160ff19169083600d811115610b5b57634e487b7160e01b600052602160045260246000fd5b02179055506020820151816001015550507f924873db50e5960d6e237a67bd481cd35f649d4ecbb172d5499bd0b8a851989b858533604051610b9f93929190611365565b60405180910390a15050505050565b610bb6610f00565b6001600160a01b0316610bc7610dcc565b6001600160a01b031614610bed5760405162461bcd60e51b815260040161050490611432565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b0392909216919091179055565b600281565b60006060600283604051610c58919061123a565b908152602001604051809103902054600384604051610c77919061123a565b908152602001604051809103902080805480602002602001604051908101604052809291908181526020016000905b82821015610d2a5760008481526020902060408051808201909152600284029091018054829060ff16600d811115610cee57634e487b7160e01b600052602160045260246000fd5b600d811115610d0d57634e487b7160e01b600052602160045260246000fd5b815260200160018201548152505081526020019060010190610ca6565b50505050905091509150915091565b610d41610f00565b6001600160a01b0316610d52610dcc565b6001600160a01b031614610d785760405162461bcd60e51b815260040161050490611432565b610d826000610f04565b565b7f722f6341587eccff4e236840b2c6571211fb687822bad2b7c7b37b130d4c617981565b7f56109128f45dd89f29ec6e16ddca878d12e9aef78a8dbd2caa537128fce6500c81565b6000546001600160a01b031690565b60046020526000908152604090205481565b8151602081840181018051600782529282019482019490942091909352909152600090815260409020805460019091015460ff9091169082565b7f790b481f3d8436972ed2b30ac1cacd05cadaf09877d2b8f61833ec142e78e18e81565b7f061cd7d15cdffa40c46709434394974d23a1fa1de25e8bd3810b54d419f7102e81565b600660209081526000928352604080842090915290825290205460ff1681565b610e97610f00565b6001600160a01b0316610ea8610dcc565b6001600160a01b031614610ece5760405162461bcd60e51b815260040161050490611432565b6001600160a01b038116610ef45760405162461bcd60e51b8152600401610504906113a0565b610efd81610f04565b50565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610f6b57600080fd5b919050565b600082601f830112610f80578081fd5b813567ffffffffffffffff80821115610f9b57610f9b61150b565b604051601f8301601f191681016020018281118282101715610fbf57610fbf61150b565b604052828152848301602001861015610fd6578384fd5b82602086016020830137918201602001929092529392505050565b600060208284031215611002578081fd5b61078982610f54565b6000806040838503121561101d578081fd5b61102683610f54565b946020939093013593505050565b60008060408385031215611046578182fd5b8235915061105660208401610f54565b90509250929050565b60008060408385031215611071578182fd5b50508035926020909101359150565b600080600060408486031215611094578081fd5b833567ffffffffffffffff808211156110ab578283fd5b818601915086601f8301126110be578283fd5b8135818111156110cc578384fd5b8760208285010111156110dd578384fd5b6020928301989097509590910135949350505050565b600060208284031215611104578081fd5b813567ffffffffffffffff81111561111a578182fd5b61112684828501610f70565b949350505050565b60008060408385031215611140578182fd5b823567ffffffffffffffff811115611156578283fd5b61116285828601610f70565b95602094909401359450505050565b60008060408385031215611183578182fd5b823567ffffffffffffffff811115611199578283fd5b6111a585828601610f70565b9250506020830135600e81106111b9578182fd5b809150509250929050565b6000602082840312156111d5578081fd5b5035919050565b600e81106111fa57634e487b7160e01b600052602160045260246000fd5b9052565b600081518084526112168160208601602086016114b8565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b6000825161124c8184602087016114b8565b9190910192915050565b6001600160a01b0391909116815260200190565b901515815260200190565b9115158252602082015260400190565b90815260200190565b9182526001600160a01b0316602082015260400190565b60006040808301858452602082818601528186518084526060870191508288019350855b818110156112f55784516112de8482516111dc565b8401518385015293830193918501916001016112c9565b509098975050505050505050565b6020810161131182846111dc565b92915050565b6040810161132582856111dc565b8260208301529392505050565b60006060825261134560608301866111fe565b6020830194909452506001600160a01b0391909116604090910152919050565b60006060825261137860608301866111fe565b905061138760208301856111dc565b6001600160a01b03929092166040919091015292915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252600b908201526a13dc99195c88195e1a5cdd60aa1b604082015260600190565b6020808252600d908201526c2737903832b936b4b9b9b4b7b760991b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600e908201526d2737ba103832b936b4b9b9b4b7b760911b604082015260600190565b6020808252600f908201526e13dc99195c881b9bdd08195e1a5cdd608a1b604082015260600190565b60005b838110156114d35781810151838201526020016114bb565b838111156108e45750506000910152565b600060001982141561150457634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d717168212b87bb1cc5ea1c5ee9a492d127d88f02857d666b830f5b5ea0f9fb964736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c80636c19e783116100de5780638da5cb5b11610097578063d5af096d11610071578063d5af096d14610316578063d5b988201461031e578063dc18fa9514610326578063f2fde38b1461034657610173565b80638da5cb5b146102da57806399374642146102e2578063bb9a932c146102f557610173565b80636c19e783146102865780637068fab914610299578063712ca0f8146102a1578063715018a6146102c257806371d05b7e146102ca57806389b2465d146102d257610173565b80633a5f4e86116101305780633a5f4e86146102125780633fc770a514610225578063466cf7a81461022d5780634749a63f14610240578063673132e214610260578063674f29481461027357610173565b806301d0216c1461017857806306577f2614610196578063123e7582146101ab5780631a948947146101be5780632079fb9a146101d1578063364476ed146101f1575b600080fd5b610180610359565b60405161018d9190611285565b60405180910390f35b6101a96101a436600461100b565b61037d565b005b6101a96101b9366004611080565b610399565b6101806101cc3660046110f3565b61042f565b6101e46101df3660046111c4565b61044c565b60405161018d9190611256565b6102046101ff36600461112e565b610476565b60405161018d929190611317565b6101a961022036600461112e565b6104c5565b610180610631565b61018061023b366004611080565b610655565b61025361024e36600461105f565b610790565b60405161018d9190611303565b6101a961026e366004611080565b6107d3565b6101a9610281366004611171565b6108ea565b6101a9610294366004610ff1565b610bae565b610180610c3f565b6102b46102af3660046110f3565b610c44565b60405161018d9291906112a5565b6101a9610d39565b610180610d84565b610180610da8565b6101e4610dcc565b6101806102f0366004610ff1565b610ddb565b61030861030336600461112e565b610ded565b60405161018d929190611275565b610180610e27565b610180610e4b565b610339610334366004611034565b610e6f565b60405161018d919061126a565b6101a9610354366004610ff1565b610e8f565b7f1f0426c2589e5c3ea5f5996e2a4371ca21edd86514b6679c9dd135d7c85b28bf81565b6001600160a01b03909116600090815260046020526040902055565b600783836040516103ab92919061122a565b908152604080516020928190038301902060008481529252902060010154156103d35761042a565b6040805180820182526000815242602082015290516007906103f8908690869061122a565b90815260408051602092819003830190206000858152908352208251815460ff19169015151781559101516001909101555b505050565b805160208183018101805160028252928201919093012091525481565b6008818154811061045c57600080fd5b6000918252602090912001546001600160a01b0316905081565b815160208184018101805160038252928201918501919091209190528054829081106104a157600080fd5b60009182526020909120600290910201805460019091015460ff9091169250905082565b6104cd610f00565b6001600160a01b03166104de610dcc565b6001600160a01b03161461050d5760405162461bcd60e51b815260040161050490611432565b60405180910390fd5b60038260405161051d919061123a565b908152604051908190036020019020541561054a5760405162461bcd60e51b8152600401610504906113e6565b60038260405161055a919061123a565b90815260408051918290036020908101832083830190925260008084524382850152825460018082018555938252919020835160029092020180549092839160ff19169083600d8111156105be57634e487b7160e01b600052602160045260246000fd5b0217905550602082015181600101555050806002836040516105e0919061123a565b9081526020016040518091039020819055507f069662d34c4fca879fc5556a8d35367de009ac745d8dae427eed8b8164e3095c82823360405161062593929190611332565b60405180910390a15050565b7f80d27d05994edf4994028aeca85fdaca3f2d00ef05d9d609a8b295c631139a6581565b336000908152600460205260408120547f80d27d05994edf4994028aeca85fdaca3f2d00ef05d9d609a8b295c631139a6514806106c05750336000908152600460205260409020547f1f0426c2589e5c3ea5f5996e2a4371ca21edd86514b6679c9dd135d7c85b28bf145b806106f95750336000908152600460205260409020547f790b481f3d8436972ed2b30ac1cacd05cadaf09877d2b8f61833ec142e78e18e145b6107155760405162461bcd60e51b815260040161050490611467565b610720848484610399565b600082815260066020908152604080832033808552925291829020805460ff1916600117905590517f84de0f7afdcdfbe1671ed8e89eaa3b583c267b4d31e1d5da26b189ee1f51bf2d916107769185919061128e565b60405180910390a16107898484846107d3565b9392505050565b600560205281600052604060002081815481106107ac57600080fd5b9060005260206000209060209182820401919006915091509054906101000a900460ff1681565b6000805b600854811015610866576000838152600660205260408120600880549192918490811061081457634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff161515600114156108545781610850816114e4565b9250505b8061085e816114e4565b9150506107d7565b5060028114156108e45760016007858560405161088492919061122a565b9081526040805160209281900383018120600087815293529120805460ff1916921515929092179091557f2fdd6e6f80d806dd935b23adae88aacd7e931530d582f5666d6ef4ced9129bfb906108db908490611285565b60405180910390a15b50505050565b6108f2610f00565b6001600160a01b0316610903610dcc565b6001600160a01b0316146109295760405162461bcd60e51b815260040161050490611432565b600382604051610939919061123a565b908152604051908190036020019020546109655760405162461bcd60e51b81526004016105049061148f565b33600090815260046020908152604080832054808452600583528184208054835181860281018601909452808452919493909190830182828015610a0657602002820191906000526020600020906000905b82829054906101000a900460ff16600d8111156109e457634e487b7160e01b600052602160045260246000fd5b8152602060019283018181049485019490930390920291018084116109b75790505b505050505090506000805b8251811015610aa257828181518110610a3a57634e487b7160e01b600052603260045260246000fd5b6020026020010151600d811115610a6157634e487b7160e01b600052602160045260246000fd5b85600d811115610a8157634e487b7160e01b600052602160045260246000fd5b1415610a905760019150610aa2565b80610a9a816114e4565b915050610a11565b5080610ac05760405162461bcd60e51b81526004016105049061140b565b600385604051610ad0919061123a565b9081526020016040518091039020604051806040016040528086600d811115610b0957634e487b7160e01b600052602160045260246000fd5b81524360209182015282546001818101855560009485529190932082516002909402018054929390929091839160ff19169083600d811115610b5b57634e487b7160e01b600052602160045260246000fd5b02179055506020820151816001015550507f924873db50e5960d6e237a67bd481cd35f649d4ecbb172d5499bd0b8a851989b858533604051610b9f93929190611365565b60405180910390a15050505050565b610bb6610f00565b6001600160a01b0316610bc7610dcc565b6001600160a01b031614610bed5760405162461bcd60e51b815260040161050490611432565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b0392909216919091179055565b600281565b60006060600283604051610c58919061123a565b908152602001604051809103902054600384604051610c77919061123a565b908152602001604051809103902080805480602002602001604051908101604052809291908181526020016000905b82821015610d2a5760008481526020902060408051808201909152600284029091018054829060ff16600d811115610cee57634e487b7160e01b600052602160045260246000fd5b600d811115610d0d57634e487b7160e01b600052602160045260246000fd5b815260200160018201548152505081526020019060010190610ca6565b50505050905091509150915091565b610d41610f00565b6001600160a01b0316610d52610dcc565b6001600160a01b031614610d785760405162461bcd60e51b815260040161050490611432565b610d826000610f04565b565b7f722f6341587eccff4e236840b2c6571211fb687822bad2b7c7b37b130d4c617981565b7f56109128f45dd89f29ec6e16ddca878d12e9aef78a8dbd2caa537128fce6500c81565b6000546001600160a01b031690565b60046020526000908152604090205481565b8151602081840181018051600782529282019482019490942091909352909152600090815260409020805460019091015460ff9091169082565b7f790b481f3d8436972ed2b30ac1cacd05cadaf09877d2b8f61833ec142e78e18e81565b7f061cd7d15cdffa40c46709434394974d23a1fa1de25e8bd3810b54d419f7102e81565b600660209081526000928352604080842090915290825290205460ff1681565b610e97610f00565b6001600160a01b0316610ea8610dcc565b6001600160a01b031614610ece5760405162461bcd60e51b815260040161050490611432565b6001600160a01b038116610ef45760405162461bcd60e51b8152600401610504906113a0565b610efd81610f04565b50565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610f6b57600080fd5b919050565b600082601f830112610f80578081fd5b813567ffffffffffffffff80821115610f9b57610f9b61150b565b604051601f8301601f191681016020018281118282101715610fbf57610fbf61150b565b604052828152848301602001861015610fd6578384fd5b82602086016020830137918201602001929092529392505050565b600060208284031215611002578081fd5b61078982610f54565b6000806040838503121561101d578081fd5b61102683610f54565b946020939093013593505050565b60008060408385031215611046578182fd5b8235915061105660208401610f54565b90509250929050565b60008060408385031215611071578182fd5b50508035926020909101359150565b600080600060408486031215611094578081fd5b833567ffffffffffffffff808211156110ab578283fd5b818601915086601f8301126110be578283fd5b8135818111156110cc578384fd5b8760208285010111156110dd578384fd5b6020928301989097509590910135949350505050565b600060208284031215611104578081fd5b813567ffffffffffffffff81111561111a578182fd5b61112684828501610f70565b949350505050565b60008060408385031215611140578182fd5b823567ffffffffffffffff811115611156578283fd5b61116285828601610f70565b95602094909401359450505050565b60008060408385031215611183578182fd5b823567ffffffffffffffff811115611199578283fd5b6111a585828601610f70565b9250506020830135600e81106111b9578182fd5b809150509250929050565b6000602082840312156111d5578081fd5b5035919050565b600e81106111fa57634e487b7160e01b600052602160045260246000fd5b9052565b600081518084526112168160208601602086016114b8565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b6000825161124c8184602087016114b8565b9190910192915050565b6001600160a01b0391909116815260200190565b901515815260200190565b9115158252602082015260400190565b90815260200190565b9182526001600160a01b0316602082015260400190565b60006040808301858452602082818601528186518084526060870191508288019350855b818110156112f55784516112de8482516111dc565b8401518385015293830193918501916001016112c9565b509098975050505050505050565b6020810161131182846111dc565b92915050565b6040810161132582856111dc565b8260208301529392505050565b60006060825261134560608301866111fe565b6020830194909452506001600160a01b0391909116604090910152919050565b60006060825261137860608301866111fe565b905061138760208301856111dc565b6001600160a01b03929092166040919091015292915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252600b908201526a13dc99195c88195e1a5cdd60aa1b604082015260600190565b6020808252600d908201526c2737903832b936b4b9b9b4b7b760991b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600e908201526d2737ba103832b936b4b9b9b4b7b760911b604082015260600190565b6020808252600f908201526e13dc99195c881b9bdd08195e1a5cdd608a1b604082015260600190565b60005b838110156114d35781810151838201526020016114bb565b838111156108e45750506000910152565b600060001982141561150457634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d717168212b87bb1cc5ea1c5ee9a492d127d88f02857d666b830f5b5ea0f9fb964736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "consensusTx(string,bytes32)": {
        "notice": "A mapping of consensus hash to signed"
      },
      "orders(string)": {
        "notice": "A mapping of the order id to the hash that was issued"
      },
      "roles(address)": {
        "notice": "A mapping of the address to role"
      },
      "rules(bytes32,uint256)": {
        "notice": "A mapping of role to status can accept"
      },
      "signatures(bytes32,address)": {
        "notice": "A mapping of consensus hash to signed"
      },
      "statusHistory(string,uint256)": {
        "notice": "A mapping of the order id to order status throught time"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/OrderStore.sol:OrderStore",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 162,
        "contract": "contracts/OrderStore.sol:OrderStore",
        "label": "name",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 193,
        "contract": "contracts/OrderStore.sol:OrderStore",
        "label": "orders",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_bytes32)"
      },
      {
        "astId": 200,
        "contract": "contracts/OrderStore.sol:OrderStore",
        "label": "statusHistory",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(StatusHistory)183_storage)dyn_storage)"
      },
      {
        "astId": 205,
        "contract": "contracts/OrderStore.sol:OrderStore",
        "label": "roles",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bytes32)"
      },
      {
        "astId": 212,
        "contract": "contracts/OrderStore.sol:OrderStore",
        "label": "rules",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_bytes32,t_array(t_enum(OrderStatus)177)dyn_storage)"
      },
      {
        "astId": 219,
        "contract": "contracts/OrderStore.sol:OrderStore",
        "label": "signatures",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 227,
        "contract": "contracts/OrderStore.sol:OrderStore",
        "label": "consensusTx",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bytes32,t_struct(Consensus)188_storage))"
      },
      {
        "astId": 230,
        "contract": "contracts/OrderStore.sol:OrderStore",
        "label": "signers",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_enum(OrderStatus)177)dyn_storage": {
        "base": "t_enum(OrderStatus)177",
        "encoding": "dynamic_array",
        "label": "enum OrderStore.OrderStatus[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(StatusHistory)183_storage)dyn_storage": {
        "base": "t_struct(StatusHistory)183_storage",
        "encoding": "dynamic_array",
        "label": "struct OrderStore.StatusHistory[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(OrderStatus)177": {
        "encoding": "inplace",
        "label": "enum OrderStore.OrderStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_bytes32,t_array(t_enum(OrderStatus)177)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => enum OrderStore.OrderStatus[])",
        "numberOfBytes": "32",
        "value": "t_array(t_enum(OrderStatus)177)dyn_storage"
      },
      "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_bytes32,t_struct(Consensus)188_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct OrderStore.Consensus)",
        "numberOfBytes": "32",
        "value": "t_struct(Consensus)188_storage"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(StatusHistory)183_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct OrderStore.StatusHistory[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(StatusHistory)183_storage)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_string_memory_ptr,t_mapping(t_bytes32,t_struct(Consensus)188_storage))": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => mapping(bytes32 => struct OrderStore.Consensus))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_struct(Consensus)188_storage)"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Consensus)188_storage": {
        "encoding": "inplace",
        "label": "struct OrderStore.Consensus",
        "members": [
          {
            "astId": 185,
            "contract": "contracts/OrderStore.sol:OrderStore",
            "label": "verified",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 187,
            "contract": "contracts/OrderStore.sol:OrderStore",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(StatusHistory)183_storage": {
        "encoding": "inplace",
        "label": "struct OrderStore.StatusHistory",
        "members": [
          {
            "astId": 180,
            "contract": "contracts/OrderStore.sol:OrderStore",
            "label": "status",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(OrderStatus)177"
          },
          {
            "astId": 182,
            "contract": "contracts/OrderStore.sol:OrderStore",
            "label": "atBlock",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}