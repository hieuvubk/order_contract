{
  "address": "0x9c21902638aC29f1CfcFD329008C80200b70Bd7E",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "orderId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "OrderUpload",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "id",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "signers",
          "type": "address"
        }
      ],
      "name": "Sign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "orderId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "enum OrderStore.OrderStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "UpdateStatus",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "id",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        }
      ],
      "name": "Verify",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "NCC_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NVDP_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NVGH_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NVKD_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "QL_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SHOP_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        }
      ],
      "name": "addTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "checkSigned",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        }
      ],
      "name": "confirmTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "consensusTx",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "orderId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "createOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        }
      ],
      "name": "getConsensus",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderStore.Consensus",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "orderId",
          "type": "string"
        }
      ],
      "name": "getOrder",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "enum OrderStore.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "atBlock",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderStore.StatusHistory[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "orders",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requires",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "roles",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rules",
      "outputs": [
        {
          "internalType": "enum OrderStore.OrderStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "setRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "setSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "signatures",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "signers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "statusHistory",
      "outputs": [
        {
          "internalType": "enum OrderStore.OrderStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "atBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        }
      ],
      "name": "submitTransaction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "orderId",
          "type": "string"
        },
        {
          "internalType": "enum OrderStore.OrderStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "updateOrderStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb3deddfe0db2891004dbec4eca6ce1f11f1052ecf114aa480a79ae7c3b250a72",
  "receipt": {
    "to": null,
    "from": "0x656F29aAe1b4dc71e3070B324515c2208997B348",
    "contractAddress": "0x9c21902638aC29f1CfcFD329008C80200b70Bd7E",
    "transactionIndex": 1,
    "gasUsed": "1659786",
    "logsBloom": "0x
    "blockHash": "0x210bdd11da769a6f538994af9ea3f0b3986534ef8b8570c87d1cb7de6e83b83d",
    "transactionHash": "0xb3deddfe0db2891004dbec4eca6ce1f11f1052ecf114aa480a79ae7c3b250a72",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 18490218,
        "transactionHash": "0xb3deddfe0db2891004dbec4eca6ce1f11f1052ecf114aa480a79ae7c3b250a72",
        "address": "0x9c21902638aC29f1CfcFD329008C80200b70Bd7E",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000656f29aae1b4dc71e3070b324515c2208997b348"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x210bdd11da769a6f538994af9ea3f0b3986534ef8b8570c87d1cb7de6e83b83d"
      }
    ],
    "blockNumber": 18490218,
    "cumulativeGasUsed": "1680786",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "1baf47923b98df0cc7540798f8324e20",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"orderId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"OrderUpload\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"signers\",\"type\":\"address\"}],\"name\":\"Sign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"orderId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"enum OrderStore.OrderStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"UpdateStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"Verify\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NCC_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NVDP_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NVGH_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NVKD_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QL_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHOP_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"addTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"checkSigned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"confirmTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"consensusTx\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"orderId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"createOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"}],\"name\":\"getConsensus\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderStore.Consensus\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"orderId\",\"type\":\"string\"}],\"name\":\"getOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"enum OrderStore.OrderStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"atBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderStore.StatusHistory[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requires\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rules\",\"outputs\":[{\"internalType\":\"enum OrderStore.OrderStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"setRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"setSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signatures\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"signers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"statusHistory\",\"outputs\":[{\"internalType\":\"enum OrderStore.OrderStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"atBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"submitTransaction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"orderId\",\"type\":\"string\"},{\"internalType\":\"enum OrderStore.OrderStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"updateOrderStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"consensusTx(string)\":{\"notice\":\"A mapping of consensus hash to signed\"},\"orders(string)\":{\"notice\":\"A mapping of the order id to the hash that was issued\"},\"roles(address)\":{\"notice\":\"A mapping of the address to role\"},\"rules(bytes32,uint256)\":{\"notice\":\"A mapping of role to status can accept\"},\"signatures(bytes32,address)\":{\"notice\":\"A mapping of consensus hash to signed\"},\"statusHistory(string,uint256)\":{\"notice\":\"A mapping of the order id to order status throught time\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OrderStore.sol\":\"OrderStore\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/OrderStore.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/*\\n * Legacy version for reference and backward compatibility, similar to OwnableDocumentStore\\n */\\ncontract OrderStore is Ownable {\\n\\n  bytes32 public constant NVKD_ROLE = keccak256(\\\"NVKD_ROLE\\\"); // Nhan vien kinh doanh\\n  bytes32 public constant NVDP_ROLE = keccak256(\\\"NVDP_ROLE\\\"); // Nhan vien dieu phoi\\n  bytes32 public constant NVGH_ROLE = keccak256(\\\"NVGH_ROLE\\\"); // Nhan vien giao hang\\n  bytes32 public constant QL_ROLE = keccak256(\\\"QL_ROLE\\\"); // Quan ly\\n  bytes32 public constant SHOP_ROLE = keccak256(\\\"SHOP_ROLE\\\"); // Shop\\n  bytes32 public constant NCC_ROLE = keccak256(\\\"NCC_ROLE\\\"); // Nha cung cap\\n\\n  string name;\\n  // accepted = X\\u00e1c nh\\u1eadn\\n  // call_ship = Giao ship l\\u1ea5y h\\u00e0ng\\n  // taked = Ship \\u0111\\u00e3 l\\u1ea5y h\\u00e0ng\\n  // warehouse = Giao kho\\n  // delivering = \\u0110ang giao h\\u00e0ng\\n  // delivery_success = Giao h\\u00e0ng th\\u00e0nh c\\u00f4ng\\n  // rejected = Tr\\u1ea3 l\\u1ea1i h\\u00e0ng\\n  // return_warehouse = Nh\\u1eadp l\\u1ea1i kho\\n  // return_shop = Tr\\u1ea3 shop th\\u00e0nh c\\u00f4ng\\n  // cancel = H\\u1ee7y v\\u1eadn \\u0111\\u01a1n\\n  // checking = \\u0110ang \\u0111\\u1ed1i so\\u00e1t\\n  // checked = \\u0110\\u00e3 \\u0111\\u1ed1i so\\u00e1t\\n  // wait_deposit = Ch\\u1edd c\\u1ecdc\\n  // deposited = \\u0110\\u00e3 \\u0111\\u1eb7t c\\u1ecdc\\n  enum OrderStatus {\\n    accepted, \\n    call_ship,\\n    taked,\\n    warehouse,\\n    delivering,\\n    delivery_success,\\n    rejected,\\n    return_warehouse,\\n    return_shop,\\n    cancel,\\n    checking,\\n    checked,\\n    wait_deposit, \\n    deposited \\n  }\\n\\n  struct StatusHistory {\\n    OrderStatus status;\\n    uint256 atBlock;\\n  }\\n\\n  struct Consensus {\\n    bytes32 data;\\n    bool verified;\\n    uint256 timestamp;\\n  }\\n\\n  /// A mapping of the order id to the hash that was issued\\n  mapping(string => bytes32) public orders;\\n\\n  /// A mapping of the order id to order status throught time\\n  mapping(string => StatusHistory[]) public statusHistory;\\n\\n  /// A mapping of the address to role\\n  mapping(address => bytes32) public roles;\\n\\n  /// A mapping of role to status can accept\\n  mapping(bytes32 => OrderStatus[]) public rules;\\n\\n  /// A mapping of consensus hash to signed\\n  mapping(bytes32 => mapping(address => bool)) public signatures;\\n\\n  /// A mapping of consensus hash to signed\\n  mapping(string => Consensus) public consensusTx;\\n\\n  address[] public signers;\\n\\n  uint256 public constant requires = 2; // Nha cung cap\\n\\n  event OrderUpload(string orderId, bytes32 orderHash, address sender );\\n  event UpdateStatus(string orderId, OrderStatus status, address sender);\\n  event Sign(string id, bytes32 data, address signers);\\n  event Verify(string id, bytes32 data);\\n\\n  constructor() public {\\n    roles[msg.sender] = NVKD_ROLE;\\n    signers.push(msg.sender);\\n    initRules();\\n  }\\n\\n  function initRules() internal {\\n    rules[NVKD_ROLE].push(OrderStatus.accepted);\\n    rules[NVKD_ROLE].push(OrderStatus.cancel);\\n    rules[NVKD_ROLE].push(OrderStatus.return_shop);\\n    rules[NVKD_ROLE].push(OrderStatus.checked);\\n    rules[NVKD_ROLE].push(OrderStatus.checking);\\n    rules[NVDP_ROLE].push(OrderStatus.call_ship);\\n    rules[NVGH_ROLE].push(OrderStatus.taked);\\n    rules[NVGH_ROLE].push(OrderStatus.warehouse);\\n    rules[NVGH_ROLE].push(OrderStatus.delivering);\\n    rules[NVGH_ROLE].push(OrderStatus.rejected);\\n    rules[NVGH_ROLE].push(OrderStatus.return_warehouse);\\n    rules[NVGH_ROLE].push(OrderStatus.deposited);\\n  }\\n\\n  function createOrder(string memory orderId, bytes32 orderHash) public {\\n    require(statusHistory[orderId].length == 0, \\\"Order exist\\\");\\n\\n    bytes32 role = roles[msg.sender];\\n    OrderStatus[] memory remainStatus = rules[role];\\n    bool isExist = false;\\n    for(uint256 i=0; i < remainStatus.length; i++) {\\n      if(remainStatus[i] == OrderStatus.accepted) {\\n        isExist = true;\\n        break;\\n      }\\n    }\\n    require(isExist, \\\"No permission\\\");\\n    \\n    statusHistory[orderId].push(StatusHistory({\\n      status: OrderStatus.accepted,\\n      atBlock: block.number\\n    }));\\n    orders[orderId] = orderHash;\\n    emit OrderUpload(orderId, orderHash, msg.sender);\\n  }\\n\\n  function updateOrderStatus(string memory orderId, OrderStatus status) public {\\n    require(statusHistory[orderId].length != 0, \\\"Order not exist\\\");\\n    bytes32 role = roles[msg.sender];\\n    OrderStatus[] memory remainStatus = rules[role];\\n    bool isExist = false;\\n    for(uint256 i=0; i < remainStatus.length; i++) {\\n      if(status == remainStatus[i]) {\\n        isExist = true;\\n        break;\\n      }\\n    }\\n    require(isExist, \\\"No permission\\\");\\n    statusHistory[orderId].push(StatusHistory({\\n          status: status,\\n          atBlock: block.number\\n    }));\\n    emit UpdateStatus(orderId, status, msg.sender);\\n  }\\n\\n  function getOrder(string memory orderId) public view returns (bytes32, StatusHistory[] memory) {\\n    return (orders[orderId], statusHistory[orderId]);\\n  }\\n\\n  function submitTransaction(string calldata id, bytes32 data)\\n        public\\n        returns (uint transactionId)\\n  {\\n    require(roles[msg.sender] == QL_ROLE || roles[msg.sender] == SHOP_ROLE || roles[msg.sender] == NCC_ROLE, \\\"Not permission\\\");\\n    addTransaction(id, data);\\n    signatures[data][msg.sender] = true;\\n    emit Sign(id, data, msg.sender);\\n    confirmTransaction(id,data);\\n  }\\n\\n  function addTransaction(string calldata id, bytes32 data)\\n        public\\n    {\\n        if(consensusTx[id].timestamp != 0) {\\n          return;\\n        } else {\\n          consensusTx[id] = Consensus({\\n            verified: false,\\n            timestamp: block.timestamp,\\n            data: data\\n          });\\n        }\\n    }\\n\\n  function confirmTransaction(string calldata id, bytes32 data)\\n        public\\n    {\\n        uint256 count = 0;\\n        for(uint256 i = 0 ; i < signers.length; i++) {\\n          if(signatures[data][signers[i]] == true) {\\n            count++;\\n          }\\n        }\\n        if(count == requires) {\\n          consensusTx[id].verified = true;\\n          emit Verify(id, data);\\n        }\\n    }\\n  \\n  function setSigner(address signer) onlyOwner public {\\n    signers.push(signer);\\n  }\\n\\n  function setRole(address user, bytes32 role) public {\\n    roles[user] = role;\\n  }\\n\\n  function getConsensus(string calldata id) public returns (Consensus memory) {\\n    return consensusTx[id];\\n  }\\n\\n  function checkSigned(string calldata id, address signer) public returns (bool) {\\n    bytes32 data = consensusTx[id].data;\\n    return signatures[data][signer];\\n  }\\n\\n}\\n\",\"keccak256\":\"0x2809319ecce32d20872c84f5e45932add2c55e4f1eba18b026d675d710a03b14\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002161001c61009f565b6100a3565b3360008181526004602052604081207f722f6341587eccff4e236840b2c6571211fb687822bad2b7c7b37b130d4c617990556008805460018101825591527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b031916909117905561009a6100f3565b61037c565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600560209081527febfa74d0d8525dac185537e0a178d2781e5b93766bca94c82da3b10443a1c3a68054600180820183557f999edeba1e6b0ba4cedbd423663cb7b4274061a032dc47e0f1cbe9b5c8f1514084830481018054601f94851661010090810a60ff908102199092169092558554808501875587810484018054918716840a60098102908402199092169190911790558554808501875587810484018054918716840a60088102908402199092169190911790558554808501875587810484018054918716840a600b81029084021990921691909117905585548085019096558686049092018054958516820a600a810290840219909616959095179094557f072b5618ca3fa2b7a26724d02b3b37fdbdd100f60cfaacd786ca0756445017e780548084019091557fca736f7ef4b0d56a0f16716dea1f3886a44d3baeb9fa621dc64fc41a866c249d868204018054918516860a8084021990921690911790557f2fe62e94ce8a924925dd98fe6970dd77db1d5936fe21c62074a276e434cb805d8054808401825560008290527f51f6466cc4ec25cfa2a835ede5d507298d34e28a301f9e76a3b84185797dd62d87820481018054928716880a6002810290860219909316929092179091558154808501835587810482018054918716880a60038102908602199092169190911790558154808501835587810482018054918716880a60048102908602199092169190911790558154808501835587810482018054918716880a60068102908602199092169190911790558154808501835587810482018054918716880a6007810290860219909216919091179055815493840190915594820490940180549190921690920a600d8102930219909116919091179055565b6118788061038b6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636c19e783116100f95780639937464211610097578063d5af096d11610071578063d5af096d1461038d578063d5b9882014610395578063dc18fa951461039d578063f2fde38b146103b0576101a9565b80639937464214610347578063c16ec39c1461035a578063d25c0f3c1461037a576101a9565b8063715018a6116100d3578063715018a61461032757806371d05b7e1461032f57806389b2465d146103375780638da5cb5b1461033f576101a9565b80636c19e783146102eb5780637068fab9146102fe578063712ca0f814610306576101a9565b80633fc770a5116101665780634749a63f116101405780634749a63f14610283578063548f821e146102a3578063673132e2146102c5578063674f2948146102d8576101a9565b80633fc770a5146102485780634155868f14610250578063466cf7a814610270576101a9565b806301d0216c146101ae57806306577f26146101cc578063123e7582146101e15780631a948947146101f45780632079fb9a14610207578063364476ed14610227575b600080fd5b6101b66103c3565b6040516101c39190611531565b60405180910390f35b6101df6101da366004611234565b6103e7565b005b6101df6101ef36600461133b565b610403565b6101b6610202366004611385565b61049b565b61021a610215366004611456565b6104b8565b6040516101c39190611512565b61023a6102353660046113c0565b6104e2565b6040516101c39291906115bc565b6101b6610531565b61026361025e3660046112a9565b610555565b6040516101c391906117b6565b6101b661027e36600461133b565b6105ad565b610296610291366004611288565b6106f5565b6040516101c391906115ae565b6102b66102b1366004611385565b610738565b6040516101c393929190611598565b6101df6102d336600461133b565b610767565b6101df6102e6366004611403565b61087c565b6101df6102f936600461121a565b610b01565b6101b6610b92565b610319610314366004611385565b610b97565b6040516101c392919061153a565b6101df610c8c565b6101b6610cd7565b6101b6610cfb565b61021a610d1f565b6101b661035536600461121a565b610d2e565b61036d6103683660046112e9565b610d40565b6040516101c39190611526565b6101df6103883660046113c0565b610d94565b6101b6610fe9565b6101b661100d565b61036d6103ab36600461125d565b611031565b6101df6103be36600461121a565b611051565b7f1f0426c2589e5c3ea5f5996e2a4371ca21edd86514b6679c9dd135d7c85b28bf81565b6001600160a01b03909116600090815260046020526040902055565b600783836040516104159291906114e6565b90815260200160405180910390206002015460001461043357610496565b60408051606081018252828152600060208201524281830152905160079061045e90869086906114e6565b9081526040805160209281900383019020835181559183015160018301805460ff191691151591909117905591909101516002909101555b505050565b805160208183018101805160028252928201919093012091525481565b600881815481106104c857600080fd5b6000918252602090912001546001600160a01b0316905081565b8151602081840181018051600382529282019185019190912091905280548290811061050d57600080fd5b60009182526020909120600290910201805460019091015460ff9091169250905082565b7f80d27d05994edf4994028aeca85fdaca3f2d00ef05d9d609a8b295c631139a6581565b61055d611116565b6007838360405161056f9291906114e6565b90815260408051918290036020908101832060608401835280548452600181015460ff16151591840191909152600201549082015290505b92915050565b336000908152600460205260408120547f80d27d05994edf4994028aeca85fdaca3f2d00ef05d9d609a8b295c631139a6514806106185750336000908152600460205260409020547f1f0426c2589e5c3ea5f5996e2a4371ca21edd86514b6679c9dd135d7c85b28bf145b806106515750336000908152600460205260409020547f790b481f3d8436972ed2b30ac1cacd05cadaf09877d2b8f61833ec142e78e18e145b6106765760405162461bcd60e51b815260040161066d90611765565b60405180910390fd5b610681848484610403565b600082815260066020908152604080832033808552925291829020805460ff1916600117905590517fd99a2beebf12926511bfbf00fb3a0c516ac8441690e20c8cdd25a86ccd70f9bb916106db91879187918791906115fb565b60405180910390a16106ee848484610767565b9392505050565b6005602052816000526040600020818154811061071157600080fd5b9060005260206000209060209182820401919006915091509054906101000a900460ff1681565b8051602081830181018051600782529282019190930120915280546001820154600290920154909160ff169083565b6000805b6008548110156107fa57600083815260066020526040812060088054919291849081106107a857634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff161515600114156107e857816107e481611805565b9250505b806107f281611805565b91505061076b565b506002811415610876576001600785856040516108189291906114e6565b908152604051908190036020018120600101805492151560ff19909316929092179091557fd81072d34d719da4a5ae18d5db92d390b8d0a245527b3039112fa980cee0834e9061086d908690869086906115d7565b60405180910390a15b50505050565b60038260405161088c91906114f6565b908152604051908190036020019020546108b85760405162461bcd60e51b815260040161066d9061178d565b3360009081526004602090815260408083205480845260058352818420805483518186028101860190945280845291949390919083018282801561095957602002820191906000526020600020906000905b82829054906101000a900460ff16600d81111561093757634e487b7160e01b600052602160045260246000fd5b81526020600192830181810494850194909303909202910180841161090a5790505b505050505090506000805b82518110156109f55782818151811061098d57634e487b7160e01b600052603260045260246000fd5b6020026020010151600d8111156109b457634e487b7160e01b600052602160045260246000fd5b85600d8111156109d457634e487b7160e01b600052602160045260246000fd5b14156109e357600191506109f5565b806109ed81611805565b915050610964565b5080610a135760405162461bcd60e51b815260040161066d90611709565b600385604051610a2391906114f6565b9081526020016040518091039020604051806040016040528086600d811115610a5c57634e487b7160e01b600052602160045260246000fd5b81524360209182015282546001818101855560009485529190932082516002909402018054929390929091839160ff19169083600d811115610aae57634e487b7160e01b600052602160045260246000fd5b02179055506020820151816001015550507f924873db50e5960d6e237a67bd481cd35f649d4ecbb172d5499bd0b8a851989b858533604051610af293929190611663565b60405180910390a15050505050565b610b096110c2565b6001600160a01b0316610b1a610d1f565b6001600160a01b031614610b405760405162461bcd60e51b815260040161066d90611730565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b0392909216919091179055565b600281565b60006060600283604051610bab91906114f6565b908152602001604051809103902054600384604051610bca91906114f6565b908152602001604051809103902080805480602002602001604051908101604052809291908181526020016000905b82821015610c7d5760008481526020902060408051808201909152600284029091018054829060ff16600d811115610c4157634e487b7160e01b600052602160045260246000fd5b600d811115610c6057634e487b7160e01b600052602160045260246000fd5b815260200160018201548152505081526020019060010190610bf9565b50505050905091509150915091565b610c946110c2565b6001600160a01b0316610ca5610d1f565b6001600160a01b031614610ccb5760405162461bcd60e51b815260040161066d90611730565b610cd560006110c6565b565b7f722f6341587eccff4e236840b2c6571211fb687822bad2b7c7b37b130d4c617981565b7f56109128f45dd89f29ec6e16ddca878d12e9aef78a8dbd2caa537128fce6500c81565b6000546001600160a01b031690565b60046020526000908152604090205481565b60008060078585604051610d559291906114e6565b90815260408051918290036020908101909220546000908152600683528181206001600160a01b038716825290925290205460ff169150509392505050565b600382604051610da491906114f6565b9081526040519081900360200190205415610dd15760405162461bcd60e51b815260040161066d906116e4565b33600090815260046020908152604080832054808452600583528184208054835181860281018601909452808452919493909190830182828015610e7257602002820191906000526020600020906000905b82829054906101000a900460ff16600d811115610e5057634e487b7160e01b600052602160045260246000fd5b815260206001928301818104948501949093039092029101808411610e235790505b505050505090506000805b8251811015610ef0576000838281518110610ea857634e487b7160e01b600052603260045260246000fd5b6020026020010151600d811115610ecf57634e487b7160e01b600052602160045260246000fd5b1415610ede5760019150610ef0565b80610ee881611805565b915050610e7d565b5080610f0e5760405162461bcd60e51b815260040161066d90611709565b600385604051610f1e91906114f6565b90815260408051918290036020908101832083830190925260008084524382850152825460018082018555938252919020835160029092020180549092839160ff19169083600d811115610f8257634e487b7160e01b600052602160045260246000fd5b021790555060208201518160010155505083600286604051610fa491906114f6565b9081526020016040518091039020819055507f069662d34c4fca879fc5556a8d35367de009ac745d8dae427eed8b8164e3095c858533604051610af293929190611630565b7f790b481f3d8436972ed2b30ac1cacd05cadaf09877d2b8f61833ec142e78e18e81565b7f061cd7d15cdffa40c46709434394974d23a1fa1de25e8bd3810b54d419f7102e81565b600660209081526000928352604080842090915290825290205460ff1681565b6110596110c2565b6001600160a01b031661106a610d1f565b6001600160a01b0316146110905760405162461bcd60e51b815260040161066d90611730565b6001600160a01b0381166110b65760405162461bcd60e51b815260040161066d9061169e565b6110bf816110c6565b50565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516060810182526000808252602082018190529181019190915290565b80356001600160a01b038116811461114d57600080fd5b919050565b60008083601f840112611163578182fd5b50813567ffffffffffffffff81111561117a578182fd5b60208301915083602082850101111561119257600080fd5b9250929050565b600082601f8301126111a9578081fd5b813567ffffffffffffffff808211156111c4576111c461182c565b604051601f8301601f1916810160200182811182821017156111e8576111e861182c565b6040528281528483016020018610156111ff578384fd5b82602086016020830137918201602001929092529392505050565b60006020828403121561122b578081fd5b6106ee82611136565b60008060408385031215611246578081fd5b61124f83611136565b946020939093013593505050565b6000806040838503121561126f578182fd5b8235915061127f60208401611136565b90509250929050565b6000806040838503121561129a578182fd5b50508035926020909101359150565b600080602083850312156112bb578182fd5b823567ffffffffffffffff8111156112d1578283fd5b6112dd85828601611152565b90969095509350505050565b6000806000604084860312156112fd578081fd5b833567ffffffffffffffff811115611313578182fd5b61131f86828701611152565b9094509250611332905060208501611136565b90509250925092565b60008060006040848603121561134f578283fd5b833567ffffffffffffffff811115611365578384fd5b61137186828701611152565b909790965060209590950135949350505050565b600060208284031215611396578081fd5b813567ffffffffffffffff8111156113ac578182fd5b6113b884828501611199565b949350505050565b600080604083850312156113d2578182fd5b823567ffffffffffffffff8111156113e8578283fd5b6113f485828601611199565b95602094909401359450505050565b60008060408385031215611415578182fd5b823567ffffffffffffffff81111561142b578283fd5b61143785828601611199565b9250506020830135600e811061144b578182fd5b809150509250929050565b600060208284031215611467578081fd5b5035919050565b600e811061148c57634e487b7160e01b600052602160045260246000fd5b9052565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b600081518084526114d28160208601602086016117d9565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b600082516115088184602087016117d9565b9190910192915050565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b60006040808301858452602082818601528186518084526060870191508288019350855b8181101561158a57845161157384825161146e565b84015183850152938301939185019160010161155e565b509098975050505050505050565b9283529015156020830152604082015260600190565b602081016105a7828461146e565b604081016115ca828561146e565b8260208301529392505050565b6000604082526115eb604083018587611490565b9050826020830152949350505050565b60006060825261160f606083018688611490565b6020830194909452506001600160a01b039190911660409091015292915050565b60006060825261164360608301866114ba565b6020830194909452506001600160a01b0391909116604090910152919050565b60006060825261167660608301866114ba565b9050611685602083018561146e565b6001600160a01b03929092166040919091015292915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252600b908201526a13dc99195c88195e1a5cdd60aa1b604082015260600190565b6020808252600d908201526c2737903832b936b4b9b9b4b7b760991b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600e908201526d2737ba103832b936b4b9b9b4b7b760911b604082015260600190565b6020808252600f908201526e13dc99195c881b9bdd08195e1a5cdd608a1b604082015260600190565b815181526020808301511515908201526040918201519181019190915260600190565b60005b838110156117f45781810151838201526020016117dc565b838111156108765750506000910152565b600060001982141561182557634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212207eca04b86b31328a520a360022b34d6d249406bccde682e15e06d7659ec3b3d064736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a95760003560e01c80636c19e783116100f95780639937464211610097578063d5af096d11610071578063d5af096d1461038d578063d5b9882014610395578063dc18fa951461039d578063f2fde38b146103b0576101a9565b80639937464214610347578063c16ec39c1461035a578063d25c0f3c1461037a576101a9565b8063715018a6116100d3578063715018a61461032757806371d05b7e1461032f57806389b2465d146103375780638da5cb5b1461033f576101a9565b80636c19e783146102eb5780637068fab9146102fe578063712ca0f814610306576101a9565b80633fc770a5116101665780634749a63f116101405780634749a63f14610283578063548f821e146102a3578063673132e2146102c5578063674f2948146102d8576101a9565b80633fc770a5146102485780634155868f14610250578063466cf7a814610270576101a9565b806301d0216c146101ae57806306577f26146101cc578063123e7582146101e15780631a948947146101f45780632079fb9a14610207578063364476ed14610227575b600080fd5b6101b66103c3565b6040516101c39190611531565b60405180910390f35b6101df6101da366004611234565b6103e7565b005b6101df6101ef36600461133b565b610403565b6101b6610202366004611385565b61049b565b61021a610215366004611456565b6104b8565b6040516101c39190611512565b61023a6102353660046113c0565b6104e2565b6040516101c39291906115bc565b6101b6610531565b61026361025e3660046112a9565b610555565b6040516101c391906117b6565b6101b661027e36600461133b565b6105ad565b610296610291366004611288565b6106f5565b6040516101c391906115ae565b6102b66102b1366004611385565b610738565b6040516101c393929190611598565b6101df6102d336600461133b565b610767565b6101df6102e6366004611403565b61087c565b6101df6102f936600461121a565b610b01565b6101b6610b92565b610319610314366004611385565b610b97565b6040516101c392919061153a565b6101df610c8c565b6101b6610cd7565b6101b6610cfb565b61021a610d1f565b6101b661035536600461121a565b610d2e565b61036d6103683660046112e9565b610d40565b6040516101c39190611526565b6101df6103883660046113c0565b610d94565b6101b6610fe9565b6101b661100d565b61036d6103ab36600461125d565b611031565b6101df6103be36600461121a565b611051565b7f1f0426c2589e5c3ea5f5996e2a4371ca21edd86514b6679c9dd135d7c85b28bf81565b6001600160a01b03909116600090815260046020526040902055565b600783836040516104159291906114e6565b90815260200160405180910390206002015460001461043357610496565b60408051606081018252828152600060208201524281830152905160079061045e90869086906114e6565b9081526040805160209281900383019020835181559183015160018301805460ff191691151591909117905591909101516002909101555b505050565b805160208183018101805160028252928201919093012091525481565b600881815481106104c857600080fd5b6000918252602090912001546001600160a01b0316905081565b8151602081840181018051600382529282019185019190912091905280548290811061050d57600080fd5b60009182526020909120600290910201805460019091015460ff9091169250905082565b7f80d27d05994edf4994028aeca85fdaca3f2d00ef05d9d609a8b295c631139a6581565b61055d611116565b6007838360405161056f9291906114e6565b90815260408051918290036020908101832060608401835280548452600181015460ff16151591840191909152600201549082015290505b92915050565b336000908152600460205260408120547f80d27d05994edf4994028aeca85fdaca3f2d00ef05d9d609a8b295c631139a6514806106185750336000908152600460205260409020547f1f0426c2589e5c3ea5f5996e2a4371ca21edd86514b6679c9dd135d7c85b28bf145b806106515750336000908152600460205260409020547f790b481f3d8436972ed2b30ac1cacd05cadaf09877d2b8f61833ec142e78e18e145b6106765760405162461bcd60e51b815260040161066d90611765565b60405180910390fd5b610681848484610403565b600082815260066020908152604080832033808552925291829020805460ff1916600117905590517fd99a2beebf12926511bfbf00fb3a0c516ac8441690e20c8cdd25a86ccd70f9bb916106db91879187918791906115fb565b60405180910390a16106ee848484610767565b9392505050565b6005602052816000526040600020818154811061071157600080fd5b9060005260206000209060209182820401919006915091509054906101000a900460ff1681565b8051602081830181018051600782529282019190930120915280546001820154600290920154909160ff169083565b6000805b6008548110156107fa57600083815260066020526040812060088054919291849081106107a857634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff161515600114156107e857816107e481611805565b9250505b806107f281611805565b91505061076b565b506002811415610876576001600785856040516108189291906114e6565b908152604051908190036020018120600101805492151560ff19909316929092179091557fd81072d34d719da4a5ae18d5db92d390b8d0a245527b3039112fa980cee0834e9061086d908690869086906115d7565b60405180910390a15b50505050565b60038260405161088c91906114f6565b908152604051908190036020019020546108b85760405162461bcd60e51b815260040161066d9061178d565b3360009081526004602090815260408083205480845260058352818420805483518186028101860190945280845291949390919083018282801561095957602002820191906000526020600020906000905b82829054906101000a900460ff16600d81111561093757634e487b7160e01b600052602160045260246000fd5b81526020600192830181810494850194909303909202910180841161090a5790505b505050505090506000805b82518110156109f55782818151811061098d57634e487b7160e01b600052603260045260246000fd5b6020026020010151600d8111156109b457634e487b7160e01b600052602160045260246000fd5b85600d8111156109d457634e487b7160e01b600052602160045260246000fd5b14156109e357600191506109f5565b806109ed81611805565b915050610964565b5080610a135760405162461bcd60e51b815260040161066d90611709565b600385604051610a2391906114f6565b9081526020016040518091039020604051806040016040528086600d811115610a5c57634e487b7160e01b600052602160045260246000fd5b81524360209182015282546001818101855560009485529190932082516002909402018054929390929091839160ff19169083600d811115610aae57634e487b7160e01b600052602160045260246000fd5b02179055506020820151816001015550507f924873db50e5960d6e237a67bd481cd35f649d4ecbb172d5499bd0b8a851989b858533604051610af293929190611663565b60405180910390a15050505050565b610b096110c2565b6001600160a01b0316610b1a610d1f565b6001600160a01b031614610b405760405162461bcd60e51b815260040161066d90611730565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b0392909216919091179055565b600281565b60006060600283604051610bab91906114f6565b908152602001604051809103902054600384604051610bca91906114f6565b908152602001604051809103902080805480602002602001604051908101604052809291908181526020016000905b82821015610c7d5760008481526020902060408051808201909152600284029091018054829060ff16600d811115610c4157634e487b7160e01b600052602160045260246000fd5b600d811115610c6057634e487b7160e01b600052602160045260246000fd5b815260200160018201548152505081526020019060010190610bf9565b50505050905091509150915091565b610c946110c2565b6001600160a01b0316610ca5610d1f565b6001600160a01b031614610ccb5760405162461bcd60e51b815260040161066d90611730565b610cd560006110c6565b565b7f722f6341587eccff4e236840b2c6571211fb687822bad2b7c7b37b130d4c617981565b7f56109128f45dd89f29ec6e16ddca878d12e9aef78a8dbd2caa537128fce6500c81565b6000546001600160a01b031690565b60046020526000908152604090205481565b60008060078585604051610d559291906114e6565b90815260408051918290036020908101909220546000908152600683528181206001600160a01b038716825290925290205460ff169150509392505050565b600382604051610da491906114f6565b9081526040519081900360200190205415610dd15760405162461bcd60e51b815260040161066d906116e4565b33600090815260046020908152604080832054808452600583528184208054835181860281018601909452808452919493909190830182828015610e7257602002820191906000526020600020906000905b82829054906101000a900460ff16600d811115610e5057634e487b7160e01b600052602160045260246000fd5b815260206001928301818104948501949093039092029101808411610e235790505b505050505090506000805b8251811015610ef0576000838281518110610ea857634e487b7160e01b600052603260045260246000fd5b6020026020010151600d811115610ecf57634e487b7160e01b600052602160045260246000fd5b1415610ede5760019150610ef0565b80610ee881611805565b915050610e7d565b5080610f0e5760405162461bcd60e51b815260040161066d90611709565b600385604051610f1e91906114f6565b90815260408051918290036020908101832083830190925260008084524382850152825460018082018555938252919020835160029092020180549092839160ff19169083600d811115610f8257634e487b7160e01b600052602160045260246000fd5b021790555060208201518160010155505083600286604051610fa491906114f6565b9081526020016040518091039020819055507f069662d34c4fca879fc5556a8d35367de009ac745d8dae427eed8b8164e3095c858533604051610af293929190611630565b7f790b481f3d8436972ed2b30ac1cacd05cadaf09877d2b8f61833ec142e78e18e81565b7f061cd7d15cdffa40c46709434394974d23a1fa1de25e8bd3810b54d419f7102e81565b600660209081526000928352604080842090915290825290205460ff1681565b6110596110c2565b6001600160a01b031661106a610d1f565b6001600160a01b0316146110905760405162461bcd60e51b815260040161066d90611730565b6001600160a01b0381166110b65760405162461bcd60e51b815260040161066d9061169e565b6110bf816110c6565b50565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516060810182526000808252602082018190529181019190915290565b80356001600160a01b038116811461114d57600080fd5b919050565b60008083601f840112611163578182fd5b50813567ffffffffffffffff81111561117a578182fd5b60208301915083602082850101111561119257600080fd5b9250929050565b600082601f8301126111a9578081fd5b813567ffffffffffffffff808211156111c4576111c461182c565b604051601f8301601f1916810160200182811182821017156111e8576111e861182c565b6040528281528483016020018610156111ff578384fd5b82602086016020830137918201602001929092529392505050565b60006020828403121561122b578081fd5b6106ee82611136565b60008060408385031215611246578081fd5b61124f83611136565b946020939093013593505050565b6000806040838503121561126f578182fd5b8235915061127f60208401611136565b90509250929050565b6000806040838503121561129a578182fd5b50508035926020909101359150565b600080602083850312156112bb578182fd5b823567ffffffffffffffff8111156112d1578283fd5b6112dd85828601611152565b90969095509350505050565b6000806000604084860312156112fd578081fd5b833567ffffffffffffffff811115611313578182fd5b61131f86828701611152565b9094509250611332905060208501611136565b90509250925092565b60008060006040848603121561134f578283fd5b833567ffffffffffffffff811115611365578384fd5b61137186828701611152565b909790965060209590950135949350505050565b600060208284031215611396578081fd5b813567ffffffffffffffff8111156113ac578182fd5b6113b884828501611199565b949350505050565b600080604083850312156113d2578182fd5b823567ffffffffffffffff8111156113e8578283fd5b6113f485828601611199565b95602094909401359450505050565b60008060408385031215611415578182fd5b823567ffffffffffffffff81111561142b578283fd5b61143785828601611199565b9250506020830135600e811061144b578182fd5b809150509250929050565b600060208284031215611467578081fd5b5035919050565b600e811061148c57634e487b7160e01b600052602160045260246000fd5b9052565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b600081518084526114d28160208601602086016117d9565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b600082516115088184602087016117d9565b9190910192915050565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b60006040808301858452602082818601528186518084526060870191508288019350855b8181101561158a57845161157384825161146e565b84015183850152938301939185019160010161155e565b509098975050505050505050565b9283529015156020830152604082015260600190565b602081016105a7828461146e565b604081016115ca828561146e565b8260208301529392505050565b6000604082526115eb604083018587611490565b9050826020830152949350505050565b60006060825261160f606083018688611490565b6020830194909452506001600160a01b039190911660409091015292915050565b60006060825261164360608301866114ba565b6020830194909452506001600160a01b0391909116604090910152919050565b60006060825261167660608301866114ba565b9050611685602083018561146e565b6001600160a01b03929092166040919091015292915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252600b908201526a13dc99195c88195e1a5cdd60aa1b604082015260600190565b6020808252600d908201526c2737903832b936b4b9b9b4b7b760991b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600e908201526d2737ba103832b936b4b9b9b4b7b760911b604082015260600190565b6020808252600f908201526e13dc99195c881b9bdd08195e1a5cdd608a1b604082015260600190565b815181526020808301511515908201526040918201519181019190915260600190565b60005b838110156117f45781810151838201526020016117dc565b838111156108765750506000910152565b600060001982141561182557634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212207eca04b86b31328a520a360022b34d6d249406bccde682e15e06d7659ec3b3d064736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "consensusTx(string)": {
        "notice": "A mapping of consensus hash to signed"
      },
      "orders(string)": {
        "notice": "A mapping of the order id to the hash that was issued"
      },
      "roles(address)": {
        "notice": "A mapping of the address to role"
      },
      "rules(bytes32,uint256)": {
        "notice": "A mapping of role to status can accept"
      },
      "signatures(bytes32,address)": {
        "notice": "A mapping of consensus hash to signed"
      },
      "statusHistory(string,uint256)": {
        "notice": "A mapping of the order id to order status throught time"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/OrderStore.sol:OrderStore",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 162,
        "contract": "contracts/OrderStore.sol:OrderStore",
        "label": "name",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 195,
        "contract": "contracts/OrderStore.sol:OrderStore",
        "label": "orders",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_bytes32)"
      },
      {
        "astId": 202,
        "contract": "contracts/OrderStore.sol:OrderStore",
        "label": "statusHistory",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(StatusHistory)183_storage)dyn_storage)"
      },
      {
        "astId": 207,
        "contract": "contracts/OrderStore.sol:OrderStore",
        "label": "roles",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bytes32)"
      },
      {
        "astId": 214,
        "contract": "contracts/OrderStore.sol:OrderStore",
        "label": "rules",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_bytes32,t_array(t_enum(OrderStatus)177)dyn_storage)"
      },
      {
        "astId": 221,
        "contract": "contracts/OrderStore.sol:OrderStore",
        "label": "signatures",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 227,
        "contract": "contracts/OrderStore.sol:OrderStore",
        "label": "consensusTx",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Consensus)190_storage)"
      },
      {
        "astId": 230,
        "contract": "contracts/OrderStore.sol:OrderStore",
        "label": "signers",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_enum(OrderStatus)177)dyn_storage": {
        "base": "t_enum(OrderStatus)177",
        "encoding": "dynamic_array",
        "label": "enum OrderStore.OrderStatus[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(StatusHistory)183_storage)dyn_storage": {
        "base": "t_struct(StatusHistory)183_storage",
        "encoding": "dynamic_array",
        "label": "struct OrderStore.StatusHistory[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(OrderStatus)177": {
        "encoding": "inplace",
        "label": "enum OrderStore.OrderStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_bytes32,t_array(t_enum(OrderStatus)177)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => enum OrderStore.OrderStatus[])",
        "numberOfBytes": "32",
        "value": "t_array(t_enum(OrderStatus)177)dyn_storage"
      },
      "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(StatusHistory)183_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct OrderStore.StatusHistory[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(StatusHistory)183_storage)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Consensus)190_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct OrderStore.Consensus)",
        "numberOfBytes": "32",
        "value": "t_struct(Consensus)190_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Consensus)190_storage": {
        "encoding": "inplace",
        "label": "struct OrderStore.Consensus",
        "members": [
          {
            "astId": 185,
            "contract": "contracts/OrderStore.sol:OrderStore",
            "label": "data",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 187,
            "contract": "contracts/OrderStore.sol:OrderStore",
            "label": "verified",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 189,
            "contract": "contracts/OrderStore.sol:OrderStore",
            "label": "timestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(StatusHistory)183_storage": {
        "encoding": "inplace",
        "label": "struct OrderStore.StatusHistory",
        "members": [
          {
            "astId": 180,
            "contract": "contracts/OrderStore.sol:OrderStore",
            "label": "status",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(OrderStatus)177"
          },
          {
            "astId": 182,
            "contract": "contracts/OrderStore.sol:OrderStore",
            "label": "atBlock",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}